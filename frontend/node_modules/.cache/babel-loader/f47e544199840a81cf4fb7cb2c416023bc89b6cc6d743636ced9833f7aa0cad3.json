{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./Chat.css';import logo from'../assets/logo.png';import axios from'axios';// ✅ Added axios import\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const Chat=()=>{const[input,setInput]=useState('');const[messages,setMessages]=useState([]);// ✅ Load messages from localStorage on first render\nuseEffect(()=>{const savedMessages=JSON.parse(localStorage.getItem('chatMessages'));if(savedMessages){setMessages(savedMessages);}},[]);// ✅ Save messages to localStorage when updated\nuseEffect(()=>{localStorage.setItem('chatMessages',JSON.stringify(messages));},[messages]);const handleSend=async()=>{if(!input.trim())return;const userMessage={sender:'user',text:input};setMessages(prev=>[...prev,userMessage]);try{const res=await axios.post('https://alimai.onrender.com/api/chat/ask',{question:input});const botMessage={sender:'bot',text:res.data.message};setMessages(prev=>[...prev,botMessage]);}catch(err){setMessages(prev=>[...prev,{sender:'bot',text:'Error fetching response.'}]);}setInput('');};return/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"img\",{src:logo,alt:\"Logo\",className:\"chat-logo\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"chat-title\",children:\"\\uFDFD\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-box\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-messages\",children:messages.map((msg,idx)=>/*#__PURE__*/_jsxs(\"div\",{className:`chat-message ${msg.sender}`,children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.sender==='user'?'You':'AalimAI',\":\"]}),\" \",msg.text]},idx))}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-area\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:input,onChange:e=>setInput(e.target.value),className:\"chat-input\",placeholder:\"Type your Islamic question...\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSend,className:\"chat-button\",children:\"Ask\"})]})]}),/*#__PURE__*/_jsx(\"div\",{className:\"footer\",children:\"Developed by Subhan Khan\"})]});};export default Chat;","map":{"version":3,"names":["React","useState","useEffect","logo","axios","jsx","_jsx","jsxs","_jsxs","Chat","input","setInput","messages","setMessages","savedMessages","JSON","parse","localStorage","getItem","setItem","stringify","handleSend","trim","userMessage","sender","text","prev","res","post","question","botMessage","data","message","err","className","children","src","alt","map","msg","idx","type","value","onChange","e","target","placeholder","onClick"],"sources":["/home/subhan-khan/AlimAI/frontend/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './Chat.css';\nimport logo from '../assets/logo.png';\nimport axios from 'axios'; // ✅ Added axios import\n\nconst Chat = () => {\n  const [input, setInput] = useState('');\n  const [messages, setMessages] = useState([]);\n\n  // ✅ Load messages from localStorage on first render\n  useEffect(() => {\n    const savedMessages = JSON.parse(localStorage.getItem('chatMessages'));\n    if (savedMessages) {\n      setMessages(savedMessages);\n    }\n  }, []);\n\n  // ✅ Save messages to localStorage when updated\n  useEffect(() => {\n    localStorage.setItem('chatMessages', JSON.stringify(messages));\n  }, [messages]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { sender: 'user', text: input };\n    setMessages(prev => [...prev, userMessage]);\n\n    try {\n      const res = await axios.post('https://alimai.onrender.com/api/chat/ask', { question: input });\n\n      const botMessage = { sender: 'bot', text: res.data.message };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      setMessages(prev => [...prev, { sender: 'bot', text: 'Error fetching response.' }]);\n    }\n\n    setInput('');\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <img src={logo} alt=\"Logo\" className=\"chat-logo\" />\n      <h1 className=\"chat-title\">﷽</h1>\n      <div className=\"chat-box\">\n        <div className=\"chat-messages\">\n          {messages.map((msg, idx) => (\n            <div key={idx} className={`chat-message ${msg.sender}`}>\n              <strong>{msg.sender === 'user' ? 'You' : 'AalimAI'}:</strong> {msg.text}\n            </div>\n          ))}\n        </div>\n        <div className=\"chat-input-area\">\n          <input\n            type=\"text\"\n            value={input}\n            onChange={e => setInput(e.target.value)}\n            className=\"chat-input\"\n            placeholder=\"Type your Islamic question...\"\n          />\n          <button onClick={handleSend} className=\"chat-button\">Ask</button>\n        </div>\n      </div>\n      {/* Added \"Developed by Subhan Khan\" at the bottom */}\n      <div className=\"footer\">\n        Developed by Subhan Khan\n      </div>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}