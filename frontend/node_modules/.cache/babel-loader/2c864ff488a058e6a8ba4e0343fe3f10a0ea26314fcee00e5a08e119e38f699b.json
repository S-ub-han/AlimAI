{"ast":null,"code":"var _jsxFileName = \"/home/subhan-khan/Desktop/AlimAI/frontend/src/pages/Chat.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./chat.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction ChatPage() {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  const handleSend = async () => {\n    if (!input.trim()) return;\n    const userMessage = {\n      sender: \"user\",\n      text: input\n    };\n    setMessages(prev => [...prev, userMessage]);\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          message: input\n        })\n      });\n      const data = await res.json();\n      const botMessage = {\n        sender: \"bot\",\n        text: data.response\n      };\n      setMessages(prev => [...prev, botMessage]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n    }\n    setInput(\"\");\n  };\n  const handleKeyPress = e => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chat-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"AalimAI Chat\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-box\",\n      children: messages.map((msg, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`,\n        children: msg.text\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        placeholder: \"Ask something...\",\n        onChange: e => setInput(e.target.value),\n        onKeyPres: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_s(ChatPage, \"WeNpxDEIB1TvYizD4iKTeHepowk=\");\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","ChatPage","_s","input","setInput","messages","setMessages","handleSend","trim","userMessage","sender","text","prev","res","fetch","method","headers","body","JSON","stringify","message","data","json","botMessage","response","err","console","error","handleKeyPress","e","key","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","i","type","value","placeholder","onChange","target","onKeyPres","onClick","_c","$RefreshReg$"],"sources":["/home/subhan-khan/Desktop/AlimAI/frontend/src/pages/Chat.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./chat.css\";\n\nfunction ChatPage() {\n  const [input, setInput] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  const handleSend = async () => {\n    if (!input.trim()) return;\n\n    const userMessage = { sender: \"user\", text: input };\n    setMessages((prev) => [...prev, userMessage]);\n\n    try {\n      const res = await fetch(\"http://localhost:5000/api/chat\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ message: input }),\n      });\n\n      const data = await res.json();\n      const botMessage = { sender: \"bot\", text: data.response };\n      setMessages((prev) => [...prev, botMessage]);\n    } catch (err) {\n      console.error(\"Error:\", err);\n    }\n\n    setInput(\"\");\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === \"Enter\") {\n      handleSend();\n    }\n  };\n\n  return (\n    <div className=\"chat-container\">\n      <h2>AalimAI Chat</h2>\n      <div className=\"chat-box\">\n        {messages.map((msg, i) => (\n          <div\n            key={i}\n            className={`message ${msg.sender === \"user\" ? \"user\" : \"bot\"}`}\n          >\n            {msg.text}\n          </div>\n        ))}\n      </div>\n      <div className=\"input-area\">\n        <input\n          type=\"text\"\n          value={input}\n          placeholder=\"Ask something...\"\n          onChange={(e) => setInput(e.target.value)}\n          onKeyPres ={handleKeyPress}\n        />\n        <button onClick={handleSend}>Send</button>\n      </div>\n    </div>\n  );\n}\n\nexport default ChatPage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}